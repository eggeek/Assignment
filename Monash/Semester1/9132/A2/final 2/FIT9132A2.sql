-- Generated by Oracle SQL Developer Data Modeler 4.1.3.901
--   at:        2016-05-26 10:34:43 AEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g
/*
shizhe zhao 27505928
Har Gobind Singh 27557324
*/

spool output/schema_output.txt

DROP SEQUENCE Colour_colour_id_SEQ;
DROP SEQUENCE feature_feature_id_SEQ;
DROP SEQUENCE location_type_ltype_id_SEQ;
DROP SEQUENCE action_action_id_SEQ;
DROP SEQUENCE trip_trip_id_SEQ;
DROP SEQUENCE location_location_id_SEQ;
DROP SEQUENCE Driver_driver_id_SEQ;
DROP SEQUENCE driver_audit_log_id_SEQ;
-- Generated by Oracle SQL Developer Data Modeler 4.1.3.901
--   at:        2016-05-27 20:01:29 AEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




DROP
  TABLE Colour CASCADE CONSTRAINTS ;

DROP
  TABLE Driver CASCADE CONSTRAINTS ;

DROP
  TABLE action CASCADE CONSTRAINTS ;

DROP
  TABLE booking CASCADE CONSTRAINTS ;

DROP
  TABLE courses_available CASCADE CONSTRAINTS ;

DROP
  TABLE driver_audit CASCADE CONSTRAINTS ;

DROP
  TABLE driver_languages CASCADE CONSTRAINTS ;

DROP
  TABLE feature CASCADE CONSTRAINTS ;

DROP
  TABLE language_code CASCADE CONSTRAINTS ;

DROP
  TABLE location CASCADE CONSTRAINTS ;

DROP
  TABLE location_type CASCADE CONSTRAINTS ;

DROP
  TABLE official CASCADE CONSTRAINTS ;

DROP
  TABLE official_languages CASCADE CONSTRAINTS ;

DROP
  TABLE qualifications CASCADE CONSTRAINTS ;

DROP
  TABLE registration CASCADE CONSTRAINTS ;

DROP
  TABLE trip CASCADE CONSTRAINTS ;

DROP
  TABLE vehicle CASCADE CONSTRAINTS ;

DROP
  TABLE vehicle_action_records CASCADE CONSTRAINTS ;

DROP
  TABLE vehicle_features CASCADE CONSTRAINTS ;

CREATE
  TABLE Colour
  (
    colour_id   NUMBER NOT NULL ,
    colour_name VARCHAR2 (20) NOT NULL
  ) ;

ALTER TABLE Colour ADD CONSTRAINT Colour_PK PRIMARY KEY ( colour_id ) ;


ALTER TABLE Colour ADD CONSTRAINT colour_name_UN UNIQUE ( colour_name ) ;


CREATE
  TABLE Driver
  (
    --  driver ID as the primary key of this table
    driver_id NUMBER NOT NULL ,
    --  input driver's first name
    first_name VARCHAR2 (20) NOT NULL ,
    --  input driver's last name
    last_name VARCHAR2 (20) NOT NULL ,
    --  driver's licence number
    lincence_number VARCHAR2 (18) NOT NULL ,
    --  driver's date of birth
    date_of_birth DATE NOT NULL ,
    --  driver's clearance level from 1- 4
    clearance_level NUMBER DEFAULT 1 NOT NULL ,
    --  availibility - 'yes', 'no' or 'sus'(suspended)  values only
    availability VARCHAR2 (3) DEFAULT 'yes' NOT NULL ,
    --  number of qualifications count
    qualifications_count NUMBER NOT NULL
  ) ;



ALTER TABLE Driver ADD CONSTRAINT chk_clearance_level CHECK ( clearance_level BETWEEN 1 AND 4) ;


ALTER TABLE Driver ADD CONSTRAINT chk_availability CHECK ( availability IN ('yes', 'no', 'sus')) ;

ALTER TABLE Driver ADD CONSTRAINT Driver_PK PRIMARY KEY ( driver_id ) ;


ALTER TABLE Driver ADD CONSTRAINT lincence__UN UNIQUE ( lincence_number ) ;


CREATE
  TABLE action
  (
    action_id NUMBER NOT NULL ,
    --  the action type (Maintenance or repair)
    atype VARCHAR2 (20) NOT NULL
  ) ;



ALTER TABLE action ADD CONSTRAINT chk_atype CHECK ( atype IN ('maintenance', 'repair')) ;

ALTER TABLE action ADD CONSTRAINT action_PK PRIMARY KEY ( action_id ) ;


ALTER TABLE action ADD CONSTRAINT action__UN UNIQUE ( atype ) ;


CREATE
  TABLE booking
  (
    booking_start_datetime DATE NOT NULL ,
    booking_end_datetime   DATE NOT NULL ,
    --  driver ID as the primary key of this table
    Driver_driver_id NUMBER NOT NULL ,
    --  the official's Olympic ID (8 characters), primary key
    olympic_id CHAR (8) NOT NULL ,
    --  registration number
    registration_rego VARCHAR2 (10) NOT NULL ,
    start_location_id NUMBER NOT NULL ,
    end_location_id   NUMBER NOT NULL
  ) ;


CREATE UNIQUE INDEX booking__IDX ON booking
  (
    registration_rego ASC
  )
  ;
CREATE UNIQUE INDEX booking__IDXv1 ON booking
  (
    start_location_id ASC
  )
  ;
CREATE UNIQUE INDEX booking__IDXv2 ON booking
  (
    end_location_id ASC
  )
  ;

ALTER TABLE booking ADD CONSTRAINT booking_PK PRIMARY KEY ( Driver_driver_id, olympic_id, registration_rego, start_location_id, end_location_id ) ;


CREATE
  TABLE courses_available
  (
    --  look up table. course code is the primary key.
    course_code VARCHAR2 (10) NOT NULL ,
    --  course name
    course_name VARCHAR2 (20) NOT NULL ,
    --  duration of course in days weeks or months
    course_duration NUMBER NOT NULL
  ) ;



ALTER TABLE courses_available ADD CONSTRAINT chk_course_duration CHECK ( course_duration BETWEEN 1 AND 5) ;

ALTER TABLE courses_available ADD CONSTRAINT courses_available_PK PRIMARY KEY ( course_code ) ;


CREATE
  TABLE driver_audit
  (
    log_id       NUMBER NOT NULL ,
    log_datetime DATE NOT NULL ,
    log_content  VARCHAR2 (300) NOT NULL ,
    log_user     VARCHAR2 (30) NOT NULL
  ) ;

ALTER TABLE driver_audit ADD CONSTRAINT audit_PK PRIMARY KEY ( log_id ) ;


CREATE
  TABLE driver_languages
  (
    --  driver ID as the primary key of this table
    Driver_driver_id NUMBER NOT NULL ,
    --  iso6931 code as primary key
    ISO6931_code CHAR (2) NOT NULL
  ) ;


CREATE UNIQUE INDEX driver_languages__IDX ON driver_languages
  (
    Driver_driver_id ASC
  )
  ;

ALTER TABLE driver_languages ADD CONSTRAINT driver_languages_PK PRIMARY KEY ( Driver_driver_id, ISO6931_code ) ;


CREATE
  TABLE feature
  (
    feature_id   NUMBER NOT NULL ,
    feature_name VARCHAR2 (20) NOT NULL
  ) ;

ALTER TABLE feature ADD CONSTRAINT feature_PK PRIMARY KEY ( feature_id ) ;


ALTER TABLE feature ADD CONSTRAINT feature_name_UN UNIQUE ( feature_name ) ;


CREATE
  TABLE language_code
  (
    --  iso6931 code as primary key
    ISO6931_code CHAR (2) NOT NULL ,
    --  language name
    language VARCHAR2 (20) NOT NULL
  ) ;

ALTER TABLE language_code ADD CONSTRAINT language_code_PK PRIMARY KEY ( ISO6931_code ) ;


ALTER TABLE language_code ADD CONSTRAINT language_code__UN UNIQUE ( language ) ;


CREATE
  TABLE location
  (
    location_id      NUMBER NOT NULL ,
    location_name    VARCHAR2 (100) NOT NULL ,
    location_address VARCHAR2 (100) NOT NULL ,
    --  location type id
    ltype_id NUMBER NOT NULL
  ) ;


CREATE UNIQUE INDEX location__IDX ON location
  (
    ltype_id ASC
  )
  ;

ALTER TABLE location ADD CONSTRAINT location_PK PRIMARY KEY ( location_id ) ;


CREATE
  TABLE location_type
  (
    --  location type id
    ltype_id NUMBER NOT NULL ,
    --  location type name
    ltype_name VARCHAR2 (100) NOT NULL
  ) ;

ALTER TABLE location_type ADD CONSTRAINT location_type_PK PRIMARY KEY ( ltype_id ) ;


ALTER TABLE location_type ADD CONSTRAINT ltype_name_UN UNIQUE ( ltype_name ) ;


CREATE
  TABLE official
  (
    --  the official's Olympic ID (8 characters), primary key
    olympic_id CHAR (8) NOT NULL ,
    --  official's first name
    first_name VARCHAR2 (20) NOT NULL ,
    --  official's last name
    last_name VARCHAR2 (20) NOT NULL ,
    --  description of the official
    role VARCHAR2 (20) NOT NULL
  ) ;

ALTER TABLE official ADD CONSTRAINT official_PK PRIMARY KEY ( olympic_id ) ;


CREATE
  TABLE official_languages
  (
    --  the official's Olympic ID (8 characters), primary key
    official_olympic_id CHAR (8) NOT NULL ,
    --  iso6931 code as primary key
    ISO6931_code CHAR (2) NOT NULL
  ) ;


CREATE UNIQUE INDEX official_languages__IDX ON official_languages
  (
    official_olympic_id ASC
  )
  ;

ALTER TABLE official_languages ADD CONSTRAINT official_lang_PK PRIMARY KEY ( official_olympic_id, ISO6931_code ) ;


CREATE
  TABLE qualifications
  (
    --  driver ID as the primary key of this table
    Driver_driver_id NUMBER NOT NULL ,
    --  look up table. course code is the primary key.
    available_course VARCHAR2 (10) NOT NULL ,
    --  date driver complete and received the qualification
    finish_date DATE NOT NULL
  ) ;

ALTER TABLE qualifications ADD CONSTRAINT qualifications_PK PRIMARY KEY ( Driver_driver_id, available_course ) ;


CREATE
  TABLE registration
  (
    --  registration number
    rego          VARCHAR2 (10) NOT NULL ,
    register_date DATE NOT NULL ,
    vehicle_vin   VARCHAR2 (20) NOT NULL
  ) ;


CREATE UNIQUE INDEX registration__IDX ON registration
  (
    vehicle_vin ASC
  )
  ;

ALTER TABLE registration ADD CONSTRAINT registration_PK PRIMARY KEY ( rego ) ;


ALTER TABLE registration ADD CONSTRAINT registration_vin_UN UNIQUE ( vehicle_vin ) ;


CREATE
  TABLE trip
  (
    trip_id NUMBER NOT NULL ,
    --  the odometer when trip start
    start_odo NUMBER NOT NULL ,
    --  current odmeter (update when vehicle arrived every middle location)
    current_odo NUMBER NOT NULL ,
    --  the odometer when trip finish
    finish_odo          NUMBER ,
    current_location_id NUMBER NOT NULL ,
    --  driver ID as the primary key of this table
    booking_driver_id NUMBER NOT NULL ,
    --  the official's Olympic ID (8 characters), primary key
    booking_olympic_id CHAR (8) NOT NULL ,
    --  registration number
    booking_rego      VARCHAR2 (10) NOT NULL ,
    start_location_id NUMBER NOT NULL ,
    end_location_id   NUMBER NOT NULL ,
    --  odometer when trip finish
    finish_odo1 NUMBER
  ) ;


CREATE UNIQUE INDEX trip__IDX ON trip
  (
    booking_driver_id ASC , booking_olympic_id ASC , booking_rego ASC , start_location_id ASC , end_location_id ASC
  )
  ;

ALTER TABLE trip ADD CONSTRAINT trip_PK PRIMARY KEY ( trip_id ) ;


CREATE
  TABLE vehicle
  (
    vin       VARCHAR2 (20) NOT NULL ,
    odometer  NUMBER DEFAULT 0 NOT NULL ,
    seat_num  NUMBER NOT NULL ,
    make      VARCHAR2 (20) NOT NULL ,
    model     VARCHAR2 (50) NOT NULL ,
    colour_id NUMBER NOT NULL ,
    rego      VARCHAR2 (10) ,
    --  whether the vehicle is available
    availability VARCHAR2 (3) DEFAULT 'yes' NOT NULL
  ) ;



ALTER TABLE vehicle ADD CONSTRAINT chk_vehicle_available CHECK ( availability IN ('yes', 'no', 'sus')) ;

ALTER TABLE vehicle ADD CONSTRAINT vehicle_PK PRIMARY KEY ( vin ) ;


CREATE
  TABLE vehicle_action_records
  (
    before_odometer NUMBER NOT NULL ,
    after_odometer  NUMBER NOT NULL ,
    vehicle_vin     VARCHAR2 (20) NOT NULL ,
    action_id       NUMBER NOT NULL
  ) ;

ALTER TABLE vehicle_action_records ADD CONSTRAINT vehicle_action_records_PK PRIMARY KEY ( vehicle_vin, action_id ) ;


CREATE
  TABLE vehicle_features
  (
    vehicle_vin VARCHAR2 (20) NOT NULL ,
    feature_id  NUMBER NOT NULL
  ) ;

ALTER TABLE vehicle_features ADD CONSTRAINT vehicle_features_PK PRIMARY KEY ( vehicle_vin, feature_id ) ;



ALTER TABLE vehicle_action_records ADD CONSTRAINT action_vehicle_FK FOREIGN KEY ( vehicle_vin ) REFERENCES vehicle ( vin ) ;


ALTER TABLE booking ADD CONSTRAINT booking_Driver_FK FOREIGN KEY ( Driver_driver_id ) REFERENCES Driver ( driver_id ) ;


ALTER TABLE booking ADD CONSTRAINT booking_location_FK FOREIGN KEY ( start_location_id ) REFERENCES location ( location_id ) ;


ALTER TABLE booking ADD CONSTRAINT booking_location_FKv1 FOREIGN KEY ( end_location_id ) REFERENCES location ( location_id ) ;


ALTER TABLE booking ADD CONSTRAINT booking_official_FK FOREIGN KEY ( olympic_id ) REFERENCES official ( olympic_id ) ;


ALTER TABLE booking ADD CONSTRAINT booking_registration_FK FOREIGN KEY ( registration_rego ) REFERENCES registration ( rego ) ;


ALTER TABLE driver_languages ADD CONSTRAINT driver_language_code_FK FOREIGN KEY ( ISO6931_code ) REFERENCES language_code ( ISO6931_code ) ;


ALTER TABLE driver_languages ADD CONSTRAINT driver_languages_FK FOREIGN KEY ( Driver_driver_id ) REFERENCES Driver ( driver_id ) ;


ALTER TABLE vehicle_features ADD CONSTRAINT features_vehicle_FK FOREIGN KEY ( vehicle_vin ) REFERENCES vehicle ( vin ) ;


ALTER TABLE official_languages ADD CONSTRAINT language_code_FK FOREIGN KEY ( ISO6931_code ) REFERENCES language_code ( ISO6931_code ) ;


ALTER TABLE official_languages ADD CONSTRAINT languages_official_FK FOREIGN KEY ( official_olympic_id ) REFERENCES official ( olympic_id ) ;


ALTER TABLE location ADD CONSTRAINT location_type_FK FOREIGN KEY ( ltype_id ) REFERENCES location_type ( ltype_id ) ;


ALTER TABLE qualifications ADD CONSTRAINT qualifi_courses_FK FOREIGN KEY ( available_course ) REFERENCES courses_available ( course_code ) ;


ALTER TABLE qualifications ADD CONSTRAINT qualifi_driver_FK FOREIGN KEY ( Driver_driver_id ) REFERENCES Driver ( driver_id ) ;


ALTER TABLE registration ADD CONSTRAINT registration_vehicle_FK FOREIGN KEY ( vehicle_vin ) REFERENCES vehicle ( vin ) ;


ALTER TABLE trip ADD CONSTRAINT trip_booking_FK FOREIGN KEY ( booking_driver_id, booking_olympic_id, booking_rego, start_location_id, end_location_id
) REFERENCES booking ( Driver_driver_id, olympic_id, registration_rego, start_location_id, end_location_id ) ;


ALTER TABLE trip ADD CONSTRAINT trip_location_FK FOREIGN KEY ( current_location_id ) REFERENCES location ( location_id ) ;


ALTER TABLE vehicle ADD CONSTRAINT vehicle_Colour_FK FOREIGN KEY ( colour_id ) REFERENCES Colour ( colour_id ) ;


ALTER TABLE vehicle_action_records ADD CONSTRAINT vehicle_action_FK FOREIGN KEY ( action_id ) REFERENCES action ( action_id ) ;


ALTER TABLE vehicle_features ADD CONSTRAINT vehicle_features_FK FOREIGN KEY ( feature_id ) REFERENCES feature ( feature_id ) ;

CREATE SEQUENCE Colour_colour_id_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE Driver_driver_id_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE action_action_id_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE driver_audit_log_id_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE feature_feature_id_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE location_location_id_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE location_type_ltype_id_SEQ START WITH 1 NOCACHE ORDER ;

CREATE SEQUENCE trip_trip_id_SEQ START WITH 1 NOCACHE ORDER ;


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            19
-- CREATE INDEX                             8
-- ALTER TABLE                             51
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          8
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

SPOOL off;