SQL> DROP SEQUENCE Colour_colour_id_SEQ;

Sequence COLOUR_COLOUR_ID_SEQ dropped.

SQL> DROP SEQUENCE feature_feature_id_SEQ;

Sequence FEATURE_FEATURE_ID_SEQ dropped.

SQL> DROP SEQUENCE location_type_ltype_id_SEQ;

Sequence LOCATION_TYPE_LTYPE_ID_SEQ dropped.

SQL> DROP SEQUENCE action_action_id_SEQ;

Sequence ACTION_ACTION_ID_SEQ dropped.

SQL> DROP SEQUENCE trip_trip_id_SEQ;

Sequence TRIP_TRIP_ID_SEQ dropped.

SQL> DROP SEQUENCE location_location_id_SEQ;

Sequence LOCATION_LOCATION_ID_SEQ dropped.

SQL> DROP SEQUENCE Driver_driver_id_SEQ;

Sequence DRIVER_DRIVER_ID_SEQ dropped.

SQL> DROP SEQUENCE audit_log_id_SEQ;

Sequence AUDIT_LOG_ID_SEQ dropped.

SQL> -- Generated by Oracle SQL Developer Data Modeler 4.1.3.901
SQL> --   at:        2016-05-26 14:44:59 AEST
SQL> --   site:      Oracle Database 11g
SQL> --   type:      Oracle Database 11g
SQL> DROP
  TABLE Colour CASCADE CONSTRAINTS ;

Table COLOUR dropped.

SQL> DROP
  TABLE Driver CASCADE CONSTRAINTS ;

Table DRIVER dropped.

SQL> DROP
  TABLE action CASCADE CONSTRAINTS ;

Table ACTION dropped.

SQL> DROP
  TABLE "audit" CASCADE CONSTRAINTS ;

Table "audit" dropped.

SQL> DROP
  TABLE booking CASCADE CONSTRAINTS ;

Table BOOKING dropped.

SQL> DROP
  TABLE courses_available CASCADE CONSTRAINTS ;

Table COURSES_AVAILABLE dropped.

SQL> DROP
  TABLE driver_languages CASCADE CONSTRAINTS ;

Table DRIVER_LANGUAGES dropped.

SQL> DROP
  TABLE feature CASCADE CONSTRAINTS ;

Table FEATURE dropped.

SQL> DROP
  TABLE language_code CASCADE CONSTRAINTS ;

Table LANGUAGE_CODE dropped.

SQL> DROP
  TABLE location CASCADE CONSTRAINTS ;

Table LOCATION dropped.

SQL> DROP
  TABLE location_type CASCADE CONSTRAINTS ;

Table LOCATION_TYPE dropped.

SQL> DROP
  TABLE official CASCADE CONSTRAINTS ;

Table OFFICIAL dropped.

SQL> DROP
  TABLE official_languages CASCADE CONSTRAINTS ;

Table OFFICIAL_LANGUAGES dropped.

SQL> DROP
  TABLE qualifications CASCADE CONSTRAINTS ;

Table QUALIFICATIONS dropped.

SQL> DROP
  TABLE registration CASCADE CONSTRAINTS ;

Table REGISTRATION dropped.

SQL> DROP
  TABLE trip CASCADE CONSTRAINTS ;

Table TRIP dropped.

SQL> DROP
  TABLE vehicle CASCADE CONSTRAINTS ;

Table VEHICLE dropped.

SQL> DROP
  TABLE vehicle_action_records CASCADE CONSTRAINTS ;

Table VEHICLE_ACTION_RECORDS dropped.

SQL> DROP
  TABLE vehicle_features CASCADE CONSTRAINTS ;

Table VEHICLE_FEATURES dropped.

SQL> CREATE
  TABLE Colour
  (
    colour_id   NUMBER NOT NULL ,
    colour_name VARCHAR2 (20) NOT NULL
  ) ;

Table COLOUR created.

SQL> ALTER TABLE Colour ADD CONSTRAINT Colour_PK PRIMARY KEY ( colour_id ) ;

Table COLOUR altered.

SQL> ALTER TABLE Colour ADD CONSTRAINT colour_name_UN UNIQUE ( colour_name ) ;

Table COLOUR altered.

SQL> CREATE
  TABLE Driver
  (
    --  driver ID as the primary key of this table
    driver_id NUMBER NOT NULL ,
    --  input driver's first name
    first_name VARCHAR2 (20) NOT NULL ,
    --  input driver's last name
    last_name VARCHAR2 (20) NOT NULL ,
    --  driver's licence number
    lincence_number VARCHAR2 (18) NOT NULL ,
    --  driver's date of birth
    date_of_birth DATE NOT NULL ,
    --  driver's clearance level from 1- 4
    clearance_level NUMBER DEFAULT 1 NOT NULL ,
    --  availibility - 'yes', 'no' or 'sus'(suspended)  values only
    availibility VARCHAR2 (3) DEFAULT 'yes' NOT NULL ,
    --  number of qualifications count
    qualifications_count NUMBER NOT NULL
  ) ;

Table DRIVER created.

SQL> ALTER TABLE Driver ADD CONSTRAINT chk_clearance_level CHECK ( clearance_level BETWEEN 1 AND 4) ;

Table DRIVER altered.

SQL> ALTER TABLE Driver ADD CONSTRAINT chk_availibility CHECK ( availibility IN ('yes', 'no', 'sus')) ;

Table DRIVER altered.

SQL> ALTER TABLE Driver ADD CONSTRAINT Driver_PK PRIMARY KEY ( driver_id ) ;

Table DRIVER altered.

SQL> ALTER TABLE Driver ADD CONSTRAINT lincence__UN UNIQUE ( lincence_number ) ;

Table DRIVER altered.

SQL> CREATE
  TABLE action
  (
    action_id NUMBER NOT NULL ,
    --  the action type (Maintenance or repair)
    atype NUMBER NOT NULL
  ) ;

Table ACTION created.

SQL> ALTER TABLE action ADD CONSTRAINT action_PK PRIMARY KEY ( action_id ) ;

Table ACTION altered.

SQL> ALTER TABLE action ADD CONSTRAINT action__UN UNIQUE ( atype ) ;

Table ACTION altered.

SQL> CREATE
  TABLE "audit"
  (
    log_id       NUMBER NOT NULL ,
    log_datetime DATE NOT NULL ,
    log_content  VARCHAR2 (300) NOT NULL
  ) ;

Table "audit" created.

SQL> ALTER TABLE "audit" ADD CONSTRAINT audit_PK PRIMARY KEY ( log_id ) ;

Table "audit" altered.

SQL> CREATE
  TABLE booking
  (
    booking_start_datetime DATE NOT NULL ,
    booking_end_datetime   DATE NOT NULL ,
    --  driver ID as the primary key of this table
    Driver_driver_id NUMBER NOT NULL ,
    --  the official's Olympic ID (8 characters), primary key
    official_olympic_id CHAR (8) NOT NULL ,
    --  registration number
    registration_rego VARCHAR2 (10) NOT NULL ,
    --  intend start location id
    intend_start_location_id NUMBER NOT NULL ,
    --  intend end location id
    intend_end_location_id NUMBER NOT NULL
  ) ;

Table BOOKING created.

SQL> CREATE UNIQUE INDEX booking__IDX ON booking
  (
    registration_rego ASC
  )
  ;

Unique index BOOKING__IDX created.

SQL> CREATE UNIQUE INDEX booking__IDXv1 ON booking
  (
    intend_start_location_id ASC
  )
  ;

Unique index BOOKING__IDXV1 created.

SQL> CREATE UNIQUE INDEX booking__IDXv2 ON booking
  (
    intend_end_location_id ASC
  )
  ;

Unique index BOOKING__IDXV2 created.

SQL> ALTER TABLE booking ADD CONSTRAINT booking_PK PRIMARY KEY ( Driver_driver_id, official_olympic_id, registration_rego, intend_start_location_id,
intend_end_location_id ) ;

Table BOOKING altered.

SQL> CREATE
  TABLE courses_available
  (
    --  look up table. course code is the primary key.
    course_code VARCHAR2 (10) NOT NULL ,
    --  course name
    course_name VARCHAR2 (20) NOT NULL ,
    --  duration of course in days weeks or months
    course_duration NUMBER NOT NULL
  ) ;

Table COURSES_AVAILABLE created.

SQL> ALTER TABLE courses_available ADD CONSTRAINT chk_course_duration CHECK ( course_duration BETWEEN 1 AND 5) ;

Table COURSES_AVAILABLE altered.

SQL> ALTER TABLE courses_available ADD CONSTRAINT courses_available_PK PRIMARY KEY ( course_code ) ;

Table COURSES_AVAILABLE altered.

SQL> CREATE
  TABLE driver_languages
  (
    --  driver ID as the primary key of this table
    Driver_driver_id NUMBER NOT NULL ,
    --  iso6931 code as primary key
    ISO6931_code CHAR (2) NOT NULL
  ) ;

Table DRIVER_LANGUAGES created.

SQL> ALTER TABLE driver_languages ADD CONSTRAINT driver_languages_PK PRIMARY KEY ( Driver_driver_id, ISO6931_code ) ;

Table DRIVER_LANGUAGES altered.

SQL> CREATE
  TABLE feature
  (
    feature_id   NUMBER NOT NULL ,
    feature_name VARCHAR2 (20) NOT NULL
  ) ;

Table FEATURE created.

SQL> ALTER TABLE feature ADD CONSTRAINT feature_PK PRIMARY KEY ( feature_id ) ;

Table FEATURE altered.

SQL> ALTER TABLE feature ADD CONSTRAINT feature_name_UN UNIQUE ( feature_name ) ;

Table FEATURE altered.

SQL> CREATE
  TABLE language_code
  (
    --  iso6931 code as primary key
    ISO6931_code CHAR (2) NOT NULL ,
    --  language name
    language VARCHAR2 (20) NOT NULL
  ) ;

Table LANGUAGE_CODE created.

SQL> ALTER TABLE language_code ADD CONSTRAINT language_code_PK PRIMARY KEY ( ISO6931_code ) ;

Table LANGUAGE_CODE altered.

SQL> ALTER TABLE language_code ADD CONSTRAINT language_code__UN UNIQUE ( language ) ;

Table LANGUAGE_CODE altered.

SQL> CREATE
  TABLE location
  (
    location_id      NUMBER NOT NULL ,
    location_name    VARCHAR2 (100) NOT NULL ,
    location_address VARCHAR2 (100) NOT NULL ,
    --  location type id
    ltype_id NUMBER NOT NULL
  ) ;

Table LOCATION created.

SQL> CREATE UNIQUE INDEX location__IDX ON location
  (
    ltype_id ASC
  )
  ;

Unique index LOCATION__IDX created.

SQL> ALTER TABLE location ADD CONSTRAINT location_PK PRIMARY KEY ( location_id ) ;

Table LOCATION altered.

SQL> CREATE
  TABLE location_type
  (
    --  location type id
    ltype_id NUMBER NOT NULL ,
    --  location type name
    ltype_name VARCHAR2 (100) NOT NULL
  ) ;

Table LOCATION_TYPE created.

SQL> ALTER TABLE location_type ADD CONSTRAINT location_type_PK PRIMARY KEY ( ltype_id ) ;

Table LOCATION_TYPE altered.

SQL> ALTER TABLE location_type ADD CONSTRAINT ltype_name_UN UNIQUE ( ltype_name ) ;

Table LOCATION_TYPE altered.

SQL> CREATE
  TABLE official
  (
    --  the official's Olympic ID (8 characters), primary key
    olympic_id CHAR (8) NOT NULL ,
    --  official's first name
    first_name VARCHAR2 (20) NOT NULL ,
    --  official's last name
    last_name VARCHAR2 (20) NOT NULL ,
    --  description of the official
    role VARCHAR2 (20) NOT NULL
  ) ;

Table OFFICIAL created.

SQL> ALTER TABLE official ADD CONSTRAINT official_PK PRIMARY KEY ( olympic_id ) ;

Table OFFICIAL altered.

SQL> CREATE
  TABLE official_languages
  (
    --  the official's Olympic ID (8 characters), primary key
    official_olympic_id CHAR (8) NOT NULL ,
    --  iso6931 code as primary key
    ISO6931_code CHAR (2) NOT NULL
  ) ;

Table OFFICIAL_LANGUAGES created.

SQL> ALTER TABLE official_languages ADD CONSTRAINT official_lang_PK PRIMARY KEY ( official_olympic_id, ISO6931_code ) ;

Table OFFICIAL_LANGUAGES altered.

SQL> CREATE
  TABLE qualifications
  (
    --  driver ID as the primary key of this table
    Driver_driver_id NUMBER NOT NULL ,
    --  look up table. course code is the primary key.
    available_course VARCHAR2 (10) NOT NULL ,
    --  date driver complete and received the qualification
    finish_date DATE NOT NULL
  ) ;

Table QUALIFICATIONS created.

SQL> ALTER TABLE qualifications ADD CONSTRAINT qualifications_PK PRIMARY KEY ( Driver_driver_id, available_course ) ;

Table QUALIFICATIONS altered.

SQL> CREATE
  TABLE registration
  (
    --  registration number
    rego          VARCHAR2 (10) NOT NULL ,
    register_date DATE NOT NULL ,
    vehicle_vin   VARCHAR2 (20) NOT NULL
  ) ;

Table REGISTRATION created.

SQL> CREATE UNIQUE INDEX registration__IDX ON registration
  (
    vehicle_vin ASC
  )
  ;

Unique index REGISTRATION__IDX created.

SQL> ALTER TABLE registration ADD CONSTRAINT registration_PK PRIMARY KEY ( rego ) ;

Table REGISTRATION altered.

SQL> ALTER TABLE registration ADD CONSTRAINT registration_vin_UN UNIQUE ( vehicle_vin ) ;

Table REGISTRATION altered.

SQL> CREATE
  TABLE trip
  (
    trip_id NUMBER NOT NULL ,
    --  the odometer when trip start
    start_odo NUMBER NOT NULL ,
    --  current odmeter (update when vehicle arrived every middle location)
    current_odo NUMBER NOT NULL ,
    --  the odometer when trip finish
    finish_odo NUMBER ,
    --  current location id (update when arrived a middle location)
    location_location_id2 NUMBER NOT NULL ,
    --  driver ID as the primary key of this table
    booking_driver_id NUMBER NOT NULL ,
    --  the official's Olympic ID (8 characters), primary key
    booking_olympic_id CHAR (8) NOT NULL ,
    --  registration number
    booking_rego             VARCHAR2 (10) NOT NULL ,
    booking_intend_start_lid NUMBER NOT NULL ,
    booking_intend_end_lid   NUMBER NOT NULL
  ) ;

Table TRIP created.

SQL> CREATE UNIQUE INDEX trip__IDX ON trip
  (
    booking_driver_id ASC , booking_olympic_id ASC , booking_rego ASC , booking_intend_start_lid ASC , booking_intend_end_lid ASC
  )
  ;

Unique index TRIP__IDX created.

SQL> ALTER TABLE trip ADD CONSTRAINT trip_PK PRIMARY KEY ( trip_id ) ;

Table TRIP altered.

SQL> CREATE
  TABLE vehicle
  (
    vin              VARCHAR2 (20) NOT NULL ,
    odometer         NUMBER DEFAULT 0 NOT NULL ,
    seat_num         NUMBER NOT NULL ,
    make             VARCHAR2 (20) NOT NULL ,
    model            VARCHAR2 (50) NOT NULL ,
    Colour_colour_id NUMBER NOT NULL ,
    rego             VARCHAR2 (10)
  ) ;

Table VEHICLE created.

SQL> ALTER TABLE vehicle ADD CONSTRAINT vehicle_PK PRIMARY KEY ( vin ) ;

Table VEHICLE altered.

SQL> CREATE
  TABLE vehicle_action_records
  (
    before_odometer  NUMBER NOT NULL ,
    after_odometer   NUMBER NOT NULL ,
    vehicle_vin      VARCHAR2 (20) NOT NULL ,
    action_action_id NUMBER NOT NULL
  ) ;

Table VEHICLE_ACTION_RECORDS created.

SQL> ALTER TABLE vehicle_action_records ADD CONSTRAINT vehicle_action_records_PK PRIMARY KEY ( vehicle_vin, action_action_id ) ;

Table VEHICLE_ACTION_RECORDS altered.

SQL> CREATE
  TABLE vehicle_features
  (
    vehicle_vin VARCHAR2 (20) NOT NULL ,
    feature_id  NUMBER NOT NULL
  ) ;

Table VEHICLE_FEATURES created.

SQL> ALTER TABLE vehicle_features ADD CONSTRAINT vehicle_features_PK PRIMARY KEY ( vehicle_vin, feature_id ) ;

Table VEHICLE_FEATURES altered.

SQL> ALTER TABLE vehicle_action_records ADD CONSTRAINT action_vehicle_FK FOREIGN KEY ( vehicle_vin ) REFERENCES vehicle ( vin ) ;

Table VEHICLE_ACTION_RECORDS altered.

SQL> ALTER TABLE booking ADD CONSTRAINT booking_Driver_FK FOREIGN KEY ( Driver_driver_id ) REFERENCES Driver ( driver_id ) ;

Table BOOKING altered.

SQL> ALTER TABLE booking ADD CONSTRAINT booking_location_FK FOREIGN KEY ( intend_start_location_id ) REFERENCES location ( location_id ) ;

Table BOOKING altered.

SQL> ALTER TABLE booking ADD CONSTRAINT booking_location_FKv1 FOREIGN KEY ( intend_end_location_id ) REFERENCES location ( location_id ) ;

Table BOOKING altered.

SQL> ALTER TABLE booking ADD CONSTRAINT booking_official_FK FOREIGN KEY ( official_olympic_id ) REFERENCES official ( olympic_id ) ;

Table BOOKING altered.

SQL> ALTER TABLE booking ADD CONSTRAINT booking_registration_FK FOREIGN KEY ( registration_rego ) REFERENCES registration ( rego ) ;

Table BOOKING altered.

SQL> ALTER TABLE driver_languages ADD CONSTRAINT driver_language_code_FK FOREIGN KEY ( ISO6931_code ) REFERENCES language_code ( ISO6931_code ) ;

Table DRIVER_LANGUAGES altered.

SQL> ALTER TABLE driver_languages ADD CONSTRAINT driver_languages_FK FOREIGN KEY ( Driver_driver_id ) REFERENCES Driver ( driver_id ) ;

Table DRIVER_LANGUAGES altered.

SQL> ALTER TABLE vehicle_features ADD CONSTRAINT features_vehicle_FK FOREIGN KEY ( vehicle_vin ) REFERENCES vehicle ( vin ) ;

Table VEHICLE_FEATURES altered.

SQL> ALTER TABLE official_languages ADD CONSTRAINT language_code_FK FOREIGN KEY ( ISO6931_code ) REFERENCES language_code ( ISO6931_code ) ;

Table OFFICIAL_LANGUAGES altered.

SQL> ALTER TABLE official_languages ADD CONSTRAINT languages_official_FK FOREIGN KEY ( official_olympic_id ) REFERENCES official ( olympic_id ) ;

Table OFFICIAL_LANGUAGES altered.

SQL> ALTER TABLE location ADD CONSTRAINT location_type_FK FOREIGN KEY ( ltype_id ) REFERENCES location_type ( ltype_id ) ;

Table LOCATION altered.

SQL> ALTER TABLE qualifications ADD CONSTRAINT qualifi_courses_FK FOREIGN KEY ( available_course ) REFERENCES courses_available ( course_code ) ;

Table QUALIFICATIONS altered.

SQL> ALTER TABLE qualifications ADD CONSTRAINT qualifi_driver_FK FOREIGN KEY ( Driver_driver_id ) REFERENCES Driver ( driver_id ) ;

Table QUALIFICATIONS altered.

SQL> ALTER TABLE registration ADD CONSTRAINT registration_vehicle_FK FOREIGN KEY ( vehicle_vin ) REFERENCES vehicle ( vin ) ;

Table REGISTRATION altered.

SQL> ALTER TABLE trip ADD CONSTRAINT trip_booking_FK FOREIGN KEY ( booking_driver_id, booking_olympic_id, booking_rego, booking_intend_start_lid,
booking_intend_end_lid ) REFERENCES booking ( Driver_driver_id, official_olympic_id, registration_rego, intend_start_location_id,
intend_end_location_id ) ;

Table TRIP altered.

SQL> ALTER TABLE trip ADD CONSTRAINT trip_location_FK FOREIGN KEY ( location_location_id2 ) REFERENCES location ( location_id ) ;

Table TRIP altered.

SQL> ALTER TABLE vehicle ADD CONSTRAINT vehicle_Colour_FK FOREIGN KEY ( Colour_colour_id ) REFERENCES Colour ( colour_id ) ;

Table VEHICLE altered.

SQL> ALTER TABLE vehicle_action_records ADD CONSTRAINT vehicle_action_FK FOREIGN KEY ( action_action_id ) REFERENCES action ( action_id ) ;

Table VEHICLE_ACTION_RECORDS altered.

SQL> ALTER TABLE vehicle_features ADD CONSTRAINT vehicle_features_FK FOREIGN KEY ( feature_id ) REFERENCES feature ( feature_id ) ;

Table VEHICLE_FEATURES altered.

SQL> CREATE SEQUENCE Colour_colour_id_SEQ START WITH 1 NOCACHE ORDER ;

Sequence COLOUR_COLOUR_ID_SEQ created.

SQL> CREATE SEQUENCE Driver_driver_id_SEQ START WITH 1 NOCACHE ORDER ;

Sequence DRIVER_DRIVER_ID_SEQ created.

SQL> CREATE SEQUENCE action_action_id_SEQ START WITH 1 NOCACHE ORDER ;

Sequence ACTION_ACTION_ID_SEQ created.

SQL> CREATE SEQUENCE audit_log_id_SEQ START WITH 1 NOCACHE ORDER ;

Sequence AUDIT_LOG_ID_SEQ created.

SQL> CREATE SEQUENCE feature_feature_id_SEQ START WITH 1 NOCACHE ORDER ;

Sequence FEATURE_FEATURE_ID_SEQ created.

SQL> CREATE SEQUENCE location_location_id_SEQ START WITH 1 NOCACHE ORDER ;

Sequence LOCATION_LOCATION_ID_SEQ created.

SQL> CREATE SEQUENCE location_type_ltype_id_SEQ START WITH 1 NOCACHE ORDER ;

Sequence LOCATION_TYPE_LTYPE_ID_SEQ created.

SQL> CREATE SEQUENCE trip_trip_id_SEQ START WITH 1 NOCACHE ORDER ;

Sequence TRIP_TRIP_ID_SEQ created.

SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            19
SQL> -- CREATE INDEX                             6
SQL> -- ALTER TABLE                             49
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          8
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> SPOOL off
